#pragma checksum "C:\Project TFM104\TFM104Camping\FinalProjectFirstTest\FinalProjectFirstTest\Views\Buyer\test.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "83ec08cd7635ed58c5240b138e3bbd7614a7c11a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Buyer_test), @"mvc.1.0.view", @"/Views/Buyer/test.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Project TFM104\TFM104Camping\FinalProjectFirstTest\FinalProjectFirstTest\Views\_ViewImports.cshtml"
using FinalProjectFirstTest;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Project TFM104\TFM104Camping\FinalProjectFirstTest\FinalProjectFirstTest\Views\_ViewImports.cshtml"
using FinalProjectFirstTest.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"83ec08cd7635ed58c5240b138e3bbd7614a7c11a", @"/Views/Buyer/test.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"26ff9cc218848b295820657762e15fb616568996", @"/Views/_ViewImports.cshtml")]
    public class Views_Buyer_test : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div id=""mika"">
    <input disabled type=""text"" class=""form-control"" id=""IdId"" v-model:value=""UsersList[0].id"">

    <div class=""form-group"">
        <label for=""nameId"">姓名</label>
        <input type=""text"" class=""form-control"" id=""nameId"" v-model:value=""UsersList[0].name"">
    </div>
    <div class=""form-group"">
        <label for=""emailId"">帳號</label>
        <input type=""email"" class=""form-control"" id=""emailId"" v-model:value=""UsersList[0].email"">
    </div>
    <div class=""form-group"">
        <label for=""telId"">電話號碼</label>
        <input type=""tel"" class=""form-control"" id=""telId"" v-model:value=""UsersList[0].phone"">
    </div>

    <button type=""button"" class=""btn btn-primary"" data-toggle=""modal"" data-target=""#exampleModal"">
        修改密碼
    </button>
    <button v-on:click=""edit"" type=""submit"" class=""btn btn-secondary"">編輯確認</button>
    <div v-show=""isShowEdit"" class=""alert alert-primary"" role=""alert"">
        修改成功
    </div>
    <div v-show=""isShowNothing"" class=""alert alert-dange");
            WriteLiteral(@"r"" role=""alert"">
        不可為空
    </div>
    <p>{{UsersList[0].name}}</p>
    <p>{{UsersList[0].email}}</p>
    <p>{{UsersList[0].phone}}</p>
    <p>{{UsersList[0].password}}</p>

    <p>{{UsersList}}</p>

    <!-- Modal -->
    <div class=""modal fade"" id=""exampleModal"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleModalLabel"">修改密碼</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    <div class=""form-group"">
                        <label for=""passwordId"">新密碼</label>
                        <input type=""text"" class=""form-control"" id=""passwordId"" v-model:value=""UsersList[");
            WriteLiteral(@"0].password"">
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">關閉</button>
                    <button v-on:click=""edit"" type=""button"" class=""btn btn-primary"" data-dismiss=""modal"">確定</button>
                </div>
            </div>
        </div>
    </div>


</div>



<script>
    var v = new Vue({
        el: '#mika',
        data: {
            UsersList: [],
            //user: {
            //    id: '',
            //    name: '',
            //    email: '',
            //    phone: ''
            //}
            isShowEdit: false,
            isShowNothing: false
        },
        methods: {
            
            edit: function () {

                let self = this;

                //self.user.id = self.UsersList[0].id;
                //self.user.name = self.UsersList[0].name;
                //self.user.email = self.UsersLis");
            WriteLiteral(@"t[0].email;
                //self.user.phone = self.UsersList[0].phone;

                for (x of self.UsersList) {
                    if (x.name == '' || x.email == '' || x.phone == '' || x.password == '') {
                        //alert(""不可為空"");
                        self.isShowEdit = false;
                        self.isShowNothing = true;
                        return;
                    }
                }

                //POST請求
                axios({
                    method: 'post',
                    url: '/Buyer/GetNewUserInfo',
                    //API要求的資料
                    data: self.UsersList[0],
                    headers: { ""Content-Type"": 'application/json' }
                })
                    .then(function (response) {
                        if (response.data == true) {
                            //alert(""修改成功"");
                            self.isShowNothing = false;
                            self.isShowEdit = true;
                     ");
            WriteLiteral(@"   } else {
                            alert(""修改失敗"");
                        }

                    })
                    .catch(function (response) {
                        //handle error
                        console.log(response);
                    });

            }
        },
        mounted: function () {
            var self = this;
            axios.get(""/Buyer/GetUserInfo"").then(function (res) {
                self.UsersList = res.data;
            })
        }
    })
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
