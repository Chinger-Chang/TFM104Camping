#pragma checksum "C:\Project TFM104\TFM104Camping\FinalProjectFirstTest\FinalProjectFirstTest\Views\Buyer\roomInfo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "741d68fb1e96b047802fcde572350e97f9a22b24"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Buyer_roomInfo), @"mvc.1.0.view", @"/Views/Buyer/roomInfo.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Project TFM104\TFM104Camping\FinalProjectFirstTest\FinalProjectFirstTest\Views\_ViewImports.cshtml"
using FinalProjectFirstTest;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Project TFM104\TFM104Camping\FinalProjectFirstTest\FinalProjectFirstTest\Views\_ViewImports.cshtml"
using FinalProjectFirstTest.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"741d68fb1e96b047802fcde572350e97f9a22b24", @"/Views/Buyer/roomInfo.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"26ff9cc218848b295820657762e15fb616568996", @"/Views/_ViewImports.cshtml")]
    public class Views_Buyer_roomInfo : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "741d68fb1e96b047802fcde572350e97f9a22b243346", async() => {
                WriteLiteral(@"
	<style>
		.a {
			background-color: #212121;
		}

		body {
			background-color: #212121;
		}

		* {
			color: white;
		}

		label {
			color: #BDBDBD !important;
		}

		textarea {
			color: #BDBDBD !important;
		}

		.v-card__actions {
			display: flex;
			justify-content: space-between;
			position: relative;
			top: -10px;
		}
		/*img
		");
                WriteLiteral("@media screen and (min-width: 1260px) {\r\n\t\t\t.myimg {\r\n\t\t\t\twidth: 2000px;\r\n\t\t\t\theight: 2000px; 能改高\r\n\t\t\t}\r\n\t\t}*/\r\n\r\n\r\n\t</style>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "741d68fb1e96b047802fcde572350e97f9a22b244878", async() => {
                WriteLiteral(@"
	<div id=""mika"">
		<v-app>
			<template>
				<v-row class=""a"">
					<v-col v-for=""(x,index) in RoomInfo.cApicPath"" class=""d-flex child-flex"" cols=""4"">
						<v-img :src=""'/Camping_Area_Picture/'+ x""
							   lazy-src=""https://picsum.photos/id/11/10/6""
							   aspect-ratio=""1""
							   class=""grey lighten-2"">
");
                WriteLiteral(@"							<template v-slot:placeholder>
								<v-row class=""fill-height ma-0""
									   align=""center""
									   justify=""center"">
									<v-progress-circular indeterminate
														 color=""grey lighten-5""></v-progress-circular>
								</v-row>
							</template>
						</v-img>
					</v-col>
				</v-row>
			</template>
			<template>
				<v-form>
					<v-container class=""a"">
						<v-row>
							<v-col cols=""12""
								   sm=""6""
								   md=""3"">
								<h3>
									電話");
                WriteLiteral(@"<v-icon color=""#BDBDBD"">mdi-cellphone</v-icon>
									<v-text-field readonly :label=""RoomInfo.cAphone""></v-text-field>
								</h3>
							</v-col>
							<v-col cols=""12""
								   sm=""6""
								   md=""3"">
								<h3>
									地址<v-icon color=""#BDBDBD"">mdi-map-marker</v-icon>");
                WriteLiteral("\r\n\t\t\t\t\t\t\t\t\t<v-text-field readonly :label=\"RoomInfo.cAaddress\"></v-text-field>\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t</v-col>\r\n\t\t\t\t\t\t</v-row>\r\n\t\t\t\t\t</v-container>\r\n\t\t\t\t</v-form>\r\n\t\t\t</template>\r\n");
                WriteLiteral("\t\t\t<template>\r\n\t\t\t\t<v-container fluid class=\"a\">\r\n\t\t\t\t\t<h3>概述");
                WriteLiteral("<v-icon color=\"#BDBDBD\">mdi-tooltip-text-outline</v-icon>");
                WriteLiteral(@"</h3>
					<v-row style=""padding-top:10px"">
						<v-col cols=""12"" md=""6"">
							<v-textarea readonly outlined name=""input-7-4"" label=""概述""
										:value=""RoomInfo.cAdescription""></v-textarea>
						</v-col>
					</v-row>
				</v-container>
			</template>

");
                WriteLiteral("\t\t\t<template>\r\n");
                WriteLiteral(@"			</template>
			<template>
				<v-container fluid class=""a"">
					<h3 style=""padding-top:15px"">服務設施<v-icon color=""#BDBDBD"">mdi-script-text</v-icon></h3>
					<div style=""padding-top:10px"" class=""text-md-left"">
						<v-chip v-show=""RoomInfo.wifi"" class=""ma-2"" color=""#757575"" text-color=""#E0E0E0""><v-icon left> mdi-wifi </v-icon>WIFI</v-chip>
						<v-chip v-show=""RoomInfo.breakfast"" class=""ma-2"" color=""#757575"" text-color=""#BF360C""><v-icon left> mdi-coffee </v-icon>早餐</v-chip>
						<v-chip v-show=""RoomInfo.canopy"" class=""ma-2"" color=""#757575"" text-color=""#BDBDBD""><v-icon left> mdi-umbrella-beach </v-icon>雨棚</v-chip>
						<v-chip v-show=""RoomInfo.canteen"" class=""ma-2"" color=""#757575"" text-color=""#F2DBD5""><v-icon left> mdi-liquor </v-icon>食堂</v-chip>
						<v-chip v-show=""RoomInfo.dinner"" class=""ma-2"" color=""#757575"" text-color=""#BDBDBD""><v-icon left> mdi-food-turkey </v-icon>晚餐</v-chip>
						<v-chip v-show=""RoomInfo.isCancel"" class=""ma-2"" color=""#757575"" text-color=""#BDBDBD""><v-icon left> mdi-cas");
                WriteLiteral(@"h-100 </v-icon>退訂</v-chip>
						<v-chip v-show=""RoomInfo.kitchen_Utensils"" class=""ma-2"" color=""#757575"" text-color=""#BDBDBD""><v-icon left> mdi-silverware-fork-knife </v-icon>廚具</v-chip>
						<v-chip v-show=""RoomInfo.lunch"" class=""ma-2"" color=""#757575"" text-color=""#BDBDBD""><v-icon left> mdi-noodles </v-icon>午餐</v-chip>
						<v-chip v-show=""RoomInfo.mattress"" class=""ma-2"" color=""#757575"" text-color=""#BDBDBD""><v-icon left> mdi-bed-empty </v-icon>床墊</v-chip>
						<v-chip v-show=""RoomInfo.night_Lighting"" class=""ma-2"" color=""#757575"" text-color=""#BDBDBD""><v-icon left> mdi-flashlight </v-icon>夜間照明</v-chip>
						<v-chip v-show=""RoomInfo.no_Equipment"" class=""ma-2"" color=""#757575"" text-color=""#BDBDBD""><v-icon left> mdi-home-group </v-icon>豪華露營</v-chip>
						<v-chip v-show=""RoomInfo.outdoor_Tables_Chairs"" class=""ma-2"" color=""#757575"" text-color=""#BDBDBD""><v-icon left> mdi-table-chair </v-icon>戶外桌椅</v-chip>
						<v-chip v-show=""RoomInfo.power_Supply"" class=""ma-2"" color=""#757575"" text-color=""#BDBDBD""><v-icon");
                WriteLiteral(@" left> mdi-power-plug </v-icon>供電設備</v-chip>
						<v-chip v-show=""RoomInfo.public_Refrigerator"" class=""ma-2"" color=""#757575"" text-color=""#BDBDBD""><v-icon left> mdi-fridge-outline </v-icon>公共冰箱</v-chip>
						<v-chip v-show=""RoomInfo.tent_Equipment"" class=""ma-2"" color=""#757575"" text-color=""#BDBDBD""><v-icon left> mdi-tent </v-icon>帳篷設備</v-chip>
					</div>
				</v-container>
			</template>

			<div class=""row"">
");
                WriteLiteral("\t\t\t</div>\r\n\r\n\t\t\t<template>\r\n\t\t\t\t<v-container fluid class=\"a\">\r\n\t\t\t\t\t<div style=\"padding-top:50px\" class=\"row\">\r\n");
                WriteLiteral(@"						<div v-for=""x in RoomInfo.rooms"" class=""col-lg-3 col-md-4 col-sm-12"">
                            <v-card color=""#BDBDBD"" class=""mx-auto"" max-width=""400"">
                                <v-img class=""white--text align-end myimg"" height=""200px"" :src=""'/Room_Picture/'+ x.room_Path[0]"">
                                    <v-card-title>{{x.roomType}}</v-card-title>
                                </v-img>
                                <v-card-title class=""text-black text-h6 font-weight-bold""><v-icon>mdi-fire</v-icon>{{x.roomName}}</v-card-title>
                                <v-card-subtitle class=""text-black font-weight-bold"">
                                    <v-icon>mdi-star-face</v-icon>{{x.room_Des}}
                                </v-card-subtitle>
                                <v-card-text class=""text-danger text-h6 text-right font-weight-bold"">平日價格 : TWD {{x.priceOfWeekDay}}</v-card-text>

                                <v-card-actions>
");
                WriteLiteral(@"
                                    <v-btn icon color=""#EF5350"">
                                        <v-icon v-on:click=""sendFavoriteRoomID(x.roomId)"" v-if=""x.roomStatus == 'Favority'"">mdi-heart</v-icon>
                                        <v-icon v-on:click=""sendFavoriteRoomID(x.roomId)"" v-if=""x.roomStatus == null"">mdi-heart-outline</v-icon>
                                        <v-icon ");
                WriteLiteral("@click=\"snackbar = true\" color=\"#EF5350\" v-if=\"x.roomStatus == \'noUserId\'\">mdi-heart-outline</v-icon>\r\n                                    </v-btn>\r\n");
                WriteLiteral("\r\n\r\n                                    <v-btn v-if=\"x.userId != 0\" v-on:click=\"sendRoomId(x.roomId)\" color=\"#212121\" dark>\r\n                                        訂房 <v-icon>mdi-cursor-pointer</v-icon>\r\n                                    </v-btn>\r\n");
                WriteLiteral("\t\t\t\t\t\t\t\t\t<v-btn dark v-else color=\"#212121\" ");
                WriteLiteral("@click=\"snackbar = true\">\r\n\t\t\t\t\t\t\t\t\t\t訂房<v-icon>mdi-cursor-pointer</v-icon>\r\n\t\t\t\t\t\t\t\t\t</v-btn>\r\n\r\n");
                WriteLiteral("\r\n                                </v-card-actions>\r\n                                <template>\r\n                                    <div class=\"text-center\">\r\n");
                WriteLiteral(@"
                                        <v-snackbar v-model=""snackbar""
                                                    :multi-line=""multiLine"">
                                            {{ text }}

                                            <template v-slot:action=""{ attrs }"">
                                                <v-btn color=""red""
                                                       text
                                                       v-bind=""attrs""
                                                       ");
                WriteLiteral(@"@click=""snackbar = false"">
                                                    Close
                                                </v-btn>
                                            </template>
                                        </v-snackbar>
                                    </div>
                                </template>
                            </v-card>
						</div>
					</div>
");
                WriteLiteral(@"				</v-container>
			</template>
		</v-app>
	</div>

	<script>
        var v = new Vue({
            el: '#mika',
            vuetify: new Vuetify(),
            data: {
                RoomInfo: [],
                roomId: 0,
                showHeart: true,
                a: {
                    favRoomId: 1
                },
                b: {
                    why: 8787
                },
				show: false,
				//----------------------
                multiLine: true,
                snackbar: false,
                text: '請先登入:)'
            },
            methods: {
                sendRoomId: function (rid) {
                    //alert(rid);
                    this.roomId = rid;
                    //alert(this.roomId);

                    window.location.href = ""/Buyer/reservation/"" + this.roomId;
                },
                sendFavoriteRoomID: function (fRoomId) {
                    //alert(fRoomId);

                    let self = this;
         ");
                WriteLiteral(@"           self.a.favRoomId = fRoomId;
                    //alert(self.a.favRoomId);

                    //POST請求
                    axios({
                        method: 'post',
                        url: '/Buyer/getFavoriteInfo',
                        //API要求的資料
                        data: self.a,
                        headers: { ""Content-Type"": 'application/json' }
                    })
                        .then(function (response) {
                            if (response.data == true) {
                                //alert(""收藏成功"");
                                //window.location.reload();
                                axios.get(""/Buyer/getRoomInfo"").then(function (res) {
                                    self.RoomInfo = res.data;
                                    console.log(res.data);
                                })

                            } else {
                                //alert(""已取消收藏"");
                                axios.get(""/Buy");
                WriteLiteral(@"er/getRoomInfo"").then(function (res) {
                                    self.RoomInfo = res.data;
                                    console.log(res.data);
                                })
                            }
                        })
                        .catch(function (response) {
                            //handle error
                            //console.log(response.data);
                            window.location.href = response.data
                        });

                },
                changeHeart: function () {
                    if (this.showHeart) {
                        this.showHeart = false;
                    } else {
                        this.showHeart = true;
                    }
                }
            },
            mounted: function () {
                var self = this;
                axios.get(""/Buyer/getRoomInfo"").then(function (res) {
                    self.RoomInfo = res.data;
                    console.log(");
                WriteLiteral("res.data);\r\n                })\r\n            },\r\n        })\r\n\t</script>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
